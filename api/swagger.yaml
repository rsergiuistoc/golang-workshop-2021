basePath: /api
definitions:
  controllers.SignupRequestCommand:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
    type: object
  models.Todo:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      title:
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Swagger API for Workshop Todo-Service.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Workshop Todo-Service Api
  version: "1.0"
paths:
  /auth/signin:
    post:
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Authenticates the User
      tags:
      - Authentication
  /auth/signup:
    post:
      consumes:
      - application/json
      parameters:
      - description: Signup data
        in: body
        name: signup
        required: true
        schema:
          $ref: '#/definitions/controllers.SignupRequestCommand'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Registers the User
      tags:
      - Authentication
  /todos/:
    get:
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: List all todos for the authenticated user.
      tags:
      - Todo
    post:
      consumes:
      - application/json
      parameters:
      - description: Todo Update
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/models.Todo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Creates a new Todo item
      tags:
      - Todo
  /todos/:id:
    delete:
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Updates a Todo
      tags:
      - Todo
    get:
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Retrieves a Todo item
      tags:
      - Todo
    patch:
      consumes:
      - application/json
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: string
      - description: Todo Update
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/models.Todo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Updates a Todo
      tags:
      - Todo
swagger: "2.0"
